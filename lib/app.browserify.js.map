{
  "version": 3,
  "sources": [
    "../../../../../../.meteor/packages/cosmos_browserify/.0.5.0.9ybijz++os+web.browser+web.cordova/plugin.CosmosBrowserify.os/npm/CosmosBrowserify/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "_stream_0.js",
    "node_modules/react-dropzone/lib/index.js",
    "node_modules/react-dropzone/node_modules/attr-accept/dist/index.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "Dropzone = require('react-dropzone');\n",
    "'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar React = (typeof window !== \"undefined\" ? window['React']['require'] : typeof global !== \"undefined\" ? global['React']['require'] : null)(\"react\");\nvar accept = require('attr-accept');\n\nvar Dropzone = React.createClass({\n  displayName: 'Dropzone',\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      disableClick: false,\n      multiple: true\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      isDragActive: false\n    };\n  },\n\n  propTypes: {\n    onDrop: React.PropTypes.func,\n    onDropAccepted: React.PropTypes.func,\n    onDropRejected: React.PropTypes.func,\n    onDragEnter: React.PropTypes.func,\n    onDragLeave: React.PropTypes.func,\n\n    style: React.PropTypes.object,\n    activeStyle: React.PropTypes.object,\n    className: React.PropTypes.string,\n    activeClassName: React.PropTypes.string,\n    rejectClassName: React.PropTypes.string,\n\n    disableClick: React.PropTypes.bool,\n    multiple: React.PropTypes.bool,\n    accept: React.PropTypes.string\n  },\n\n  allFilesAccepted: function allFilesAccepted(files) {\n    var _this = this;\n\n    return files.every(function (file) {\n      return accept(file, _this.props.accept);\n    });\n  },\n\n  onDragEnter: function onDragEnter(e) {\n    e.preventDefault();\n\n    var dataTransferItems = Array.prototype.slice.call(e.dataTransfer ? e.dataTransfer.items : e.target.files);\n    var allFilesAccepted = this.allFilesAccepted(dataTransferItems);\n\n    this.setState({\n      isDragActive: allFilesAccepted,\n      isDragReject: !allFilesAccepted\n    });\n\n    if (this.props.onDragEnter) {\n      this.props.onDragEnter(e);\n    }\n  },\n\n  onDragOver: function onDragOver(e) {\n    e.preventDefault();\n  },\n\n  onDragLeave: function onDragLeave(e) {\n    e.preventDefault();\n\n    this.setState({\n      isDragActive: false,\n      isDragReject: false\n    });\n\n    if (this.props.onDragLeave) {\n      this.props.onDragLeave(e);\n    }\n  },\n\n  onDrop: function onDrop(e) {\n    e.preventDefault();\n\n    this.setState({\n      isDragActive: false,\n      isDragReject: false\n    });\n\n    var droppedFiles = e.dataTransfer ? e.dataTransfer.files : e.target.files;\n    var max = this.props.multiple ? droppedFiles.length : 1;\n    var files = [];\n\n    for (var i = 0; i < max; i++) {\n      var file = droppedFiles[i];\n      file.preview = URL.createObjectURL(file);\n      files.push(file);\n    }\n\n    if (this.props.onDrop) {\n      this.props.onDrop(files, e);\n    }\n\n    if (this.allFilesAccepted(files)) {\n      if (this.props.onDropAccepted) {\n        this.props.onDropAccepted(files, e);\n      }\n    } else {\n      if (this.props.onDropRejected) {\n        this.props.onDropRejected(files, e);\n      }\n    }\n  },\n\n  onClick: function onClick() {\n    if (!this.props.disableClick) {\n      this.open();\n    }\n  },\n\n  open: function open() {\n    var fileInput = React.findDOMNode(this.refs.fileInput);\n    fileInput.value = null;\n    fileInput.click();\n  },\n\n  render: function render() {\n\n    var className;\n    if (this.props.className) {\n      className = this.props.className;\n      if (this.state.isDragActive) {\n        className += ' ' + this.props.activeClassName;\n      };\n      if (this.state.isDragReject) {\n        className += ' ' + this.props.rejectClassName;\n      };\n    };\n\n    var style, activeStyle;\n    if (this.props.style) {\n      style = this.props.style;\n      activeStyle = this.props.activeStyle;\n    } else if (!className) {\n      style = {\n        width: 200,\n        height: 200,\n        borderWidth: 2,\n        borderColor: '#666',\n        borderStyle: 'dashed',\n        borderRadius: 5\n      };\n      activeStyle = {\n        borderStyle: 'solid',\n        backgroundColor: '#eee'\n      };\n    }\n\n    var appliedStyle;\n    if (style && this.state.isDragActive) {\n      appliedStyle = _extends({}, style, activeStyle);\n    } else {\n      appliedStyle = _extends({}, style);\n    };\n\n    return React.createElement(\n      'div',\n      {\n        className: className,\n        style: appliedStyle,\n        onClick: this.onClick,\n        onDragEnter: this.onDragEnter,\n        onDragOver: this.onDragOver,\n        onDragLeave: this.onDragLeave,\n        onDrop: this.onDrop\n      },\n      this.props.children,\n      React.createElement('input', {\n        type: 'file',\n        ref: 'fileInput',\n        style: { display: 'none' },\n        multiple: this.props.multiple,\n        accept: this.props.accept,\n        onChange: this.onDrop\n      })\n    );\n  }\n\n});\n\nmodule.exports = Dropzone;\n",
    "/**\n * Check if the provided file type should be accepted by the input with accept attribute.\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Input#attr-accept\n *\n * Borrowed from https://github.com/enyo/dropzone\n *\n * @param file {File} https://developer.mozilla.org/en-US/docs/Web/API/File\n * @param acceptedFiles {string}\n * @returns {boolean}\n */\n\n'use strict';\n\nexports.__esModule = true;\n\nexports['default'] = function (file, acceptedFiles) {\n    if (acceptedFiles) {\n        var _ret = (function () {\n            var acceptedFilesArray = acceptedFiles.split(',');\n            var mimeType = file.type;\n            var baseMimeType = mimeType.replace(/\\/.*$/, '');\n\n            return {\n                v: acceptedFilesArray.some(function (type) {\n                    var validType = type.trim();\n                    if (validType.charAt(0) === '.') {\n                        return file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1;\n                    } else if (/\\/\\*$/.test(validType)) {\n                        // This is something like a image/* mime type\n                        return baseMimeType === validType.replace(/\\/.*$/, '');\n                    }\n                    return mimeType === validType;\n                })\n            };\n        })();\n\n        if (typeof _ret === 'object') return _ret.v;\n    }\n    return true;\n};\n\nmodule.exports = exports['default'];"
  ]
}